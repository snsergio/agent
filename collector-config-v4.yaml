# Monitoring config file for metric collector v4-PUB-4d87eb0-20230508150250 #########################################
# v4.15 ############################################################################################
custom:                                   # Customer-specific configuration
  customerName: hpe-cec                   # Set here the Station name (specific for the customer)
  captureInterval: 10s                    # Time interval to run metrics collector on host - tipically between 10s and 30s
  StationIP:                              # Host's IP to verify if not has been changed (in situations where host IP must be fixed)
    - 187.0.173.85                        # List of IPs if more than 1
path:                                     # Metric collector files path
  logPath: /opt/eyeflow/monitor           # PATH to save log file (monitoring.log)
  scriptFile: /opt/eyeflow/monitor        # PATH where collector agent is (metric-collector.py)
environment:                              # Environment variables - metric collector operation information
  pushUrl: gpu-pgw.eyeflow.ai             # Main pushgateway URL
  pushUrl2: station-pgw.eyeflow.ai:9091   # Secondary pushgateway URL - Usually Eyeflow's edge servers pushgateway URL
  camUrl:                                 # Eyeflow's camera detection component URL and port number
  lineSensrorUrl:                         # IP Sensor in production line
    - http://192.168.2.41:137             # List of API URL to check GET response (==2xx or !=2xx)
  pingList:                               # List of IPs to perform PING test to check connectivity
    - 8.8.8.8
  processNames:                           # List of process keywords to verify if is running at host and capture basic metrics
    - call_flow                           #    - must contain a name or epty (this paramenter do not accept 'all')
    - metric-collector
  topProcessNumber: 3                     # Number of 'top offender processes' to capture data (if captureMetrics/topProcess is set to true)
  eyeflowDocker:                          # List of Docker container keywords (or all) to verify if is running at host and capture active time
    - all
  eyeflowDockerExcept:                    # List of Docker container keywords to exclude (do not capture active time)
    - none
tls:                                      # Pushgateway TLS information, configure pushUrl and pushurl2 parameters accordingly
  pushUrl_TLS: true                       #   use true only if pushgateway has TLS enabled and only false if hasn't
  pushUrl_TLS_Username: remote
  pushUrl_TLS_Password: YzJ4aGFTNXpiR0Zw
  pushUrl2_TLS: false
  pushUrl2_TLS_Username: remote
  pushUrl2_TLS_Password: YzJ4aGFTNXpiR0Zw
captureMetrics:                           # Metrics to capture (true/false)
  backup: true                            # Check backup success based on specific backup session details 
  camera: false                           # Camera status (must have URL set - environment/camUrl)
  disk: true                              # Capture disk metrics
  docker: true                            # Capture docker containers (must have environment/eyeflowDocker list set)
  gpuNvidia: false                        # Capture GPU metrics (Nvidia metrics only)
  lineSensor: true                        # Capture Line Sensor API GET response (API URL list in environment/lineSensorUrl)
  network: true                           # Capture network metrics
  ipPing: true                            # Veirfy connectivity on specified IP ping list (environment/pingList)
  process: true                           # Capture Ubuntu process activity (must have environment/processNames list set)
  topProcess: true                        # Capture Ubuntu top <n> active processes and their activity (<n> is set on environment/topProcessNumber)
  selfIP: true                            # Verify if any of host's UP IP addresses (IPv4) match specified IP configuration (custom/StationIP)
  sensor: true                            # Capture sensor metrics (must have Ubuntu's sensor-lm package installed)
  sysAgent: false                         # Verify if sysagent service is running
  server: true                            # Capture host's metrics
metricDetails: full                       # List of metrics to capture: light = main metrics or full = complete list of metrics (high storage usage)
debugMode: false                          # Debug metric collector execution or not-If true, more log data sent to log file (lots of disk space)
backup:                                   # Backup routine details
  folder: "/home/ubuntu/temp"             # Folder where data is stored (complete path)
  filePrefix:                             # Backup file common prefix
  fileSuffix: .yml                        # Backup file common suffix
  frequency: 1d                           # Backup frequency - monthly (m), daily (d), hourly (h) - ex: 7d (weekly); 12h (twice a day)
restart:                                  # Service information if metric collector should restart or not specified services (use with care)
  camRestart: false                       # Auto restart for camera API
  sysAgentRestart: false                  # Auto restart for Sys Agent service
  suAccess: "sa.KT9zrGYeg2"               # Auto restart token
update:                                   # Metric collector update actions
  autoUpdate: true                        # Metric collector will check API for newer component versions and download them
  autoRestart: true                       # If enabled, metric collector will restart after update components
  apiUrl: "http://172.173.242.132:9199"   # API URL
  apiAccesstoken: ""                      # API Access information
